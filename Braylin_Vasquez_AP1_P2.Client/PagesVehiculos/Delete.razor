@page "/Delete/{VehiculoId:int}"
@inject HttpClient httpClient
<div class="card shadow-lg">
    <div class="card-header">
        <h3 class="text-danger"> ¿Seguro que quieres eliminar este vehiculo?</h3>
    </div>
    <div class="card-body">
        <p> Veh&iacute;culoId: @Vehiculo.VehiculoId</p>
        <p> Fecha: @Vehiculo.Fecha</p>
        <p> Descripci&oacute;n: @Vehiculo.Descripcion</p>
        <p> Costo: @Vehiculo.Costo</p>
        <p> Gastos: @Vehiculo.Gastos</p>
        @if(Mensaje != null)
        {
            <p class="text-danger">@Mensaje</p>
        }
    </div>
    <div class="card-footer">
        <div class="btn-group">
            <a href="Index" class="btn btn-primary bi bi-arrow-left-square-fill">Atr&aacute;s</a>
            <button class="btn btn-danger bi bi-trash-fill" @onclick="Eliminar">Eliminar</button>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public int VehiculoId { get; set; }
    public Vehiculos Vehiculo{ get; set; } = new Vehiculos();
    public string Mensaje = string.Empty;

    protected async override Task OnInitializedAsync()
    {
        Vehiculo = (await httpClient.GetFromJsonAsync<Vehiculos>($"api/Vehiculos/{VehiculoId}"))!;
    }

    public async Task Eliminar()
    {
        var eliminado = await httpClient.DeleteAsync($"api/Vehiculos/{VehiculoId}");
        if (!eliminado.IsSuccessStatusCode)
        {
            return;
        }
        else
        {
            Mensaje = "Eliminado correctamente";
            Vehiculo = new Vehiculos();
            StateHasChanged();
        }
    }
}
